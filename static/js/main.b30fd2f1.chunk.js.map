{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["App","onChange","event","inputName","target","name","value","setState","preventDefault","handleCheck","expired","checked","applyFilter","handlePageChange","page","currentPage","Number","fetchData","axios","get","then","res","jobs","data","handleSort","key","sortConf","asc","desc","prevState","cstate","Object","assign","sort_by","sort_order","state","experience","location","skill","title","company","filteredSet","cloneDeep","filter","obj","Date","enddate","orderBy","toLowerCase","indexOf","skills","companyname","PerPage","bind","this","indexOfLastJob","indexOfFirstJob","renderJobs","slice","map","job","className","_id","href","applylink","style","color","type","toDateString","id","placeholder","required","onClick","length","class","role","Group","Check","label","isEmpty","activePage","itemsCountPerPage","totalItemsCount","prevPageText","nextPageText","itemClass","linkClass","activeLinkClass","firstPageText","lastPageText","pageRangeDisplayed","React","Component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b30fd2f1.chunk.js","sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { cloneDeep, isEmpty, orderBy, filter } from \"lodash\";\nimport \"./App.css\";\n\nimport Pagination from \"react-js-pagination\";\nimport Form from \"react-bootstrap/Form\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      jobs: [],\n      filteredSet: [],\n      currentPage: 1,\n      PerPage: 10,\n      sort_by: \"location\",\n      sort_order: \"asc\",\n      experience: \"\",\n      skill: \"\",\n      location: \"\",\n      title: \"\",\n      company: \"\",\n      expired: false\n    };\n    this.handlePageChange = this.handlePageChange.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  onChange = event => {\n    let inputName = event.target.name;\n    let value = event.target.value;\n    this.setState({ [inputName]: value });\n    event.preventDefault();\n  };\n\n  handleCheck = event => {\n    this.setState({ expired: event.target.checked }, () => {\n      this.applyFilter();\n    });\n  };\n\n  handlePageChange = page => {\n    this.setState({\n      currentPage: Number(page)\n    });\n  };\n\n  fetchData = () => {\n    axios\n      .get(\n        `https://cors-anywhere.herokuapp.com/https://nut-case.s3.amazonaws.com/jobs.json`\n      )\n      .then(res => {\n        const jobs = res.data.data;\n        this.setState(\n          {\n            jobs\n          },\n          () => {\n            this.applyFilter();\n          }\n        );\n      });\n  };\n\n  handleSort = key => {\n    const sortConf = {\n      asc: \"desc\",\n      desc: \"asc\"\n    };\n    this.setState(prevState => {\n      let cstate = Object.assign({}, prevState);\n      return {\n        sort_by: key,\n        sort_order: sortConf[cstate.sort_order]\n      };\n    });\n    this.applyFilter();\n  };\n\n  applyFilter = () => {\n    const {\n      jobs,\n      sort_by,\n      sort_order,\n      experience,\n      location,\n      skill,\n      title,\n      company,\n      expired\n    } = this.state;\n\n    let filteredSet = cloneDeep(jobs);\n    if (expired) {\n      filteredSet = filter(filteredSet, function(obj) {\n        return new Date() < new Date(obj.enddate);\n      });\n    }\n    filteredSet = orderBy(filteredSet, [sort_by], [sort_order]);\n    if (experience) {\n      filteredSet = filter(filteredSet, function(obj) {\n        return (\n          obj.experience.toLowerCase().indexOf(experience.toLowerCase()) !== -1\n        );\n      });\n    }\n    if (location) {\n      filteredSet = filter(filteredSet, function(obj) {\n        return (\n          obj.location.toLowerCase().indexOf(location.toLowerCase()) !== -1\n        );\n      });\n    }\n    if (skill) {\n      filteredSet = filter(filteredSet, function(obj) {\n        return obj.skills.toLowerCase().indexOf(skill.toLowerCase()) !== -1;\n      });\n    }\n    if (title) {\n      filteredSet = filter(filteredSet, function(obj) {\n        return obj.title.toLowerCase().indexOf(title.toLowerCase()) !== -1;\n      });\n    }\n    if (company) {\n      filteredSet = filter(filteredSet, function(obj) {\n        return (\n          obj.companyname.toLowerCase().indexOf(company.toLowerCase()) !== -1\n        );\n      });\n    }\n    this.setState({ filteredSet, currentPage: 1 });\n  };\n\n  render() {\n    const { jobs, currentPage, PerPage, filteredSet } = this.state;\n    const indexOfLastJob = currentPage * PerPage;\n    const indexOfFirstJob = indexOfLastJob - PerPage;\n    const currentJobs = filteredSet.slice(indexOfFirstJob, indexOfLastJob);\n    const renderJobs = currentJobs.map(job => {\n      return (\n        <div className=\"p-6 border-bottom border-secondary\" key={job._id}>\n          <h4 className=\"\">\n            {job.title} {job.experience && <span>- Exp: {job.experience}</span>}{\" \"}\n            <a href={job.applylink} className=\"text-primary\">\n              Apply Now\n            </a>\n          </h4>\n          <div className=\"my-2\">\n            <a className=\"\" style={{ color: \"#365FA8\" }} href=\"!#\">\n              {job.companyname}\n            </a>{\" \"}\n            <small className=\"text-secondary\">{job.location}</small>\n          </div>\n          <div className=\"d-flex justify-content-between\">\n            <div>\n              <span style={{ color: \"#479A4B\" }}>{job.type}</span>\n            </div>\n            <div>\n              {job.enddate && (\n                <small className=\"text-secondary\">\n                  Expires: {new Date(job.enddate).toDateString()}\n                </small>\n              )}\n            </div>\n          </div>\n        </div>\n      );\n    });\n\n    return (\n      <div id=\"app\">\n        <header className=\"bg-dark py-4 md:pb-16\">\n          <div className=\"col-md-12 mx-auto px-6\">\n            <div>\n              <h1 className=\"text-white\">Job Track</h1>\n            </div>\n            <div className=\"form-row\">\n              <div className=\"col-md-3 mb-3\">\n                <input\n                  type=\"text\"\n                  name=\"title\"\n                  className=\"form-control\"\n                  placeholder=\"Search by Job Title\"\n                  required\n                  onChange={this.onChange}\n                />\n              </div>\n              <div className=\"col-md-3 mb-3\">\n                <input\n                  type=\"text\"\n                  name=\"company\"\n                  className=\"form-control\"\n                  placeholder=\"Search by Job Company\"\n                  onChange={this.onChange}\n                  required\n                />\n              </div>\n              <div className=\"col-md-3 mb-3\">\n                <input\n                  type=\"text\"\n                  name=\"experience\"\n                  className=\"form-control\"\n                  placeholder=\"Search by Experience\"\n                  onChange={this.onChange}\n                  required\n                />\n              </div>\n              <div className=\"col-md-3 mb-3\">\n                <input\n                  type=\"text\"\n                  name=\"location\"\n                  className=\"form-control\"\n                  placeholder=\"Search by location\"\n                  required\n                  onChange={this.onChange}\n                />\n              </div>\n              <div className=\"col-md-3 mb-3\">\n                <input\n                  type=\"text\"\n                  name=\"skill\"\n                  className=\"form-control\"\n                  placeholder=\"Search by skills\"\n                  required\n                  onChange={this.onChange}\n                />\n              </div>\n              <div className=\"col-md-3\">\n                <button\n                  className=\"text-white btn btn-primary px-4 py-2\"\n                  type=\"submit\"\n                  onClick={this.applyFilter}\n                >\n                  Apply\n                </button>\n              </div>\n            </div>\n          </div>\n        </header>\n        <div className=\"mx-auto py-6 col-12\">\n          <div className=\"col-md-6\">\n            <h2 className=\"mb-2 mx-6\">Featured Jobs: {filteredSet.length}</h2>\n            <a\n              href=\"#\"\n              class=\"text-primary\"\n              role=\"button\"\n              onClick={() => this.handleSort(\"location\")}\n            >\n              Sort by location\n            </a>\n            <span> / </span>\n            <a\n              href=\"#\"\n              class=\"text-primary\"\n              role=\"button\"\n              onClick={() => this.handleSort(\"experience\")}\n            >\n              Sort by experience\n            </a>\n            <Form.Group>\n              <Form.Check\n                type=\"checkbox\"\n                label=\"Filter expired\"\n                checked={this.state.expired}\n                onClick={this.handleCheck}\n              />\n            </Form.Group>\n            {renderJobs}\n          </div>\n          {!isEmpty(filteredSet) && (\n            <Pagination\n              activePage={currentPage}\n              itemsCountPerPage={PerPage}\n              totalItemsCount={filteredSet.length}\n              prevPageText=\"PREV\"\n              nextPageText=\"NEXT\"\n              itemClass=\"page-item\"\n              linkClass=\"page-link\"\n              activeLinkClass=\"\"\n              firstPageText=\"FIRST\"\n              lastPageText=\"LAST\"\n              pageRangeDisplayed={5}\n              onChange={this.handlePageChange}\n            />\n          )}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}